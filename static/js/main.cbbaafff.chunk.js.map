{"version":3,"sources":["Canvas.js","ColorOption.js","App.js","index.js"],"names":["Canvas","canvas","ReactDOM","findDOMNode","this","style","width","height","offsetWidth","offsetHeight","context","getContext","setState","nextProps","clear","resetCanvas","e","rect","state","getBoundingClientRect","beginPath","lastX","targetTouches","pageX","left","lastY","pageY","top","drawing","clientX","clientY","currentX","currentY","draw","lX","lY","cX","cY","newContext","strokeStyle","props","brushColor","lineWidth","moveTo","lineTo","stroke","clearRect","defaults","getDefaultStyle","custom","canvasStyle","assign","id","onMouseDown","handleOnMouseDown","bind","onTouchStart","handleOnTouchStart","onMouseMove","handleOnMouseMove","onTouchMove","handleOnTouchMove","onMouseUp","handleonMouseUp","onTouchEnd","cursor","backgroundColor","React","Component","ColorOption","option","setOption","handleClick","target","Fragment","map","color","index","className","key","onClick","App","useState","borderColor","borderStyle","href","image","document","getElementById","toDataURL","pdf","jsPDF","addImage","save","render"],"mappings":"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","file":"static/js/main.cbbaafff.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport assign from 'object-assign'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n  componentDidMount(){\r\n    const canvas = ReactDOM.findDOMNode(this);\r\n    canvas.style.width = '100%';\r\n    canvas.style.height = '100%';\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n\r\n    const context = canvas.getContext('2d');\r\n\r\n    this.setState({\r\n      canvas,\r\n      context\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.clear){\r\n      this.resetCanvas();\r\n    }\r\n  }\r\n  static getDefaultStyle() {\r\n    return {\r\n      brushColor: '#FFFF00',\r\n      lineWidth: 4,\r\n      cursor: 'pointer',\r\n      canvasStyle: {\r\n        backgroundColor: '#00FFDC'\r\n      },\r\n      clear: false\r\n    };\r\n  }\r\n\r\n  handleOnTouchStart (e) {\r\n    const rect = this.state.canvas.getBoundingClientRect();\r\n    this.state.context.beginPath();\r\n    this.setState({\r\n      lastX: e.targetTouches[0].pageX - rect.left,\r\n      lastY: e.targetTouches[0].pageY - rect.top,\r\n      drawing: true\r\n    });\r\n  }\r\n\r\n  handleOnMouseDown(e){\r\n    const rect = this.state.canvas.getBoundingClientRect();\r\n    this.state.context.beginPath();\r\n\r\n    this.setState({\r\n      lastX: e.clientX - rect.left,\r\n      lastY: e.clientY - rect.top,\r\n      drawing: true\r\n    });\r\n  }\r\n\r\n  handleOnTouchMove (e) {\r\n    if (this.state.drawing) {\r\n      const rect = this.state.canvas.getBoundingClientRect();\r\n      const lastX = this.state.lastX;\r\n      const lastY = this.state.lastY;\r\n      let currentX = e.targetTouches[0].pageX - rect.left;\r\n      let currentY = e.targetTouches[0].pageY - rect.top;\r\n      this.draw(lastX, lastY, currentX, currentY);\r\n      this.setState({\r\n        lastX: currentX,\r\n        lastY: currentY\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnMouseMove(e){\r\n    if(this.state.drawing){\r\n      const rect = this.state.canvas.getBoundingClientRect();\r\n      const lastX = this.state.lastX;\r\n      const lastY = this.state.lastY;\r\n      let currentX = e.clientX - rect.left;\r\n      let currentY = e.clientY - rect.top;\r\n\r\n      this.draw(lastX, lastY, currentX, currentY);\r\n      this.setState({\r\n        lastX: currentX,\r\n        lastY: currentY\r\n      });\r\n    }\r\n  }\r\n\r\n  handleonMouseUp() {\r\n    this.setState({\r\n      drawing: false\r\n    });\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    const newContext = this.state.context;\r\n    newContext.strokeStyle = this.props.brushColor;\r\n    newContext.lineWidth = this.props.lineWidth;\r\n    this.setState({\r\n      context: newContext\r\n    });\r\n    this.state.context.moveTo(lX, lY);\r\n    this.state.context.lineTo(cX, cY);\r\n    this.state.context.stroke();\r\n  }\r\n\r\n  resetCanvas(){\r\n    const width = this.state.context.canvas.width;\r\n    const height = this.state.context.canvas.height;\r\n    this.state.context.clearRect(0, 0, width, height);\r\n  }\r\n\r\n  canvasStyle(){\r\n    const defaults = Canvas.getDefaultStyle();\r\n    const custom = this.props.canvasStyle;\r\n\r\n    return assign({}, defaults, custom);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas \r\n        style = {this.canvasStyle()}\r\n        id=\"canvas\"\r\n        onMouseDown = {this.handleOnMouseDown.bind(this)}\r\n        onTouchStart = {this.handleOnTouchStart.bind(this)}\r\n        onMouseMove = {this.handleOnMouseMove.bind(this)}\r\n        onTouchMove = {this.handleOnTouchMove.bind(this)}\r\n        onMouseUp = {this.handleonMouseUp.bind(this)}\r\n        onTouchEnd = {this.handleonMouseUp.bind(this)}\r\n      >\r\n      </canvas>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nCanvas.propTypes = {\r\n  brushColor: PropTypes.string,\r\n  lineWidth: PropTypes.number,\r\n  cursor: PropTypes.string,\r\n  canvasStyle: PropTypes.shape({\r\n    backgroundColor: PropTypes.string\r\n  }),\r\n  clear: PropTypes.bool\r\n};\r\n\r\nexport default Canvas;","import React from 'react';\r\n\r\nconst ColorOption = ({option, setOption}) => {\r\n    const colors = ['#000000', '#fcba03', '#94fc03', '#03fcf0', '#0384fc', '#c203fc' , '#fc0362', '#fc0303']\r\n\r\n    const handleClick = (e) => {\r\n        setOption({...option, brushColor: e.target.id})\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { colors.map((color, index)=>{\r\n                return(<div \r\n                    id={color}\r\n                    className={color === option.brushColor ? 'active box' : 'box'}\r\n                    key={index} \r\n                    style={{ backgroundColor: color }}\r\n                    onClick={handleClick}\r\n                    ></div>)\r\n            }) }\r\n        </React.Fragment>\r\n    \r\n    )\r\n}\r\n\r\nexport default ColorOption","import React from 'react';\nimport { jsPDF } from \"jspdf\";\nimport './App.css';\nimport Canvas from './Canvas';\nimport { useState } from 'react';\nimport ColorOption from './ColorOption';\n\nfunction App() {\n\n  const [option, setOption] = useState({\n      brushColor: '#000000',\n      lineWidth: 2,\n      canvasStyle: {\n        backgroundColor: '#FFFFFF',\n        borderColor: '#786B6B',\n        borderStyle: 'solid'\n      },\n    clear: false\n  })\n\n  const handleClick = () => {\n    const canvas = document.getElementById('canvas')\n    var image = canvas.toDataURL(\"image/png\");\n    const pdf = new jsPDF();\n    pdf.addImage(image, 'PNG', 0, 0);\n    pdf.save(\"download.pdf\");\n  }\n\n  const clear = () => {\n    setOption({...option, clear: true})\n    setOption({...option, clear: false})\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"colorOptionWraper\">\n          <span>Choose Brush Color: </span>\n          <ColorOption option={option} setOption={setOption} />\n      </div>\n      <div className=\"canvasWraper\">\n        <Canvas {...option} />\n      </div>\n      <div className=\"buttons\">\n        <button onClick={clear} className=\"danger\">Clear</button>\n        <a href=\"\"><button className=\"success\" onClick={handleClick}>Download</button></a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}